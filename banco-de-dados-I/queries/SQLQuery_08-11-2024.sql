--- ### BASE SERRA ###

-- Quantidade de clientes por cidade

select * from cadastros;

select CAD_CIDADE as cidade, count(*) as tot_cliente
from CADASTROS
group by CAD_CIDADE
order by 2 DESC

-- HAVING 
-- Listar a quantidade de cidade
select CAD_CIDADE as cidade, count(*) as tot_cliente
from CADASTROS
group by CAD_CIDADE
HAVING CAD_CIDADE LIKE 'C%'
order by 2

-- Listar a quantidade de cidade com mais de 100 clientes
select CAD_CIDADE as cidade, count(*) as tot_cliente
from CADASTROS
group by CAD_CIDADE
HAVING count(*) > 100
order by 2

-- Quanto seria arrecadado, por seção, caso fossem vendidos todos os produtos do estoque
select sum(pro_preco_varejo * pro_est_atual_loja) as total, pro_secao
from PRODUTOS
where pro_preco_varejo > 0 and pro_est_atual_loja > 0
group by pro_secao
order by 1

-- Mostrando pela descrição
select sum(pro_preco_varejo * pro_est_atual_loja) as total, sec_descricao
from PRODUTOS, secao
where PRO_SECAO = SEC_CODIGO and pro_preco_varejo > 0 and pro_est_atual_loja > 0
group by SEC_DESCRICAO
order by 2

--- ### BASE PROD_TI ###

CREATE TABLE PROD_TI 
(
    ID     			INT,
    NOME       		VARCHAR (30),
    FABRICANTE 		VARCHAR (15),
    QUANTIDADE		INT,
    VLUNITARIO 		DECIMAL (7,2),
    TIPO       		VARCHAR (12),
    PRIMARY KEY(ID)
);

insert into PROD_TI values (1 ,'Playstation 3','Sony',100.00,1999.00,'console');
insert into PROD_TI values (2 ,'Core 2 duo 4GB Ram 500GB HD','Dell',200.00, 1899.00,'Notebook');
insert into PROD_TI values (3 ,'Xbox 360 120GB','Microsoft',350.00,1299.00,'console');
insert into PROD_TI values (4 ,'GT-I6220 Quad Band','Samsung',300.00,499.00,'celular');
insert into PROD_TI values (5 ,'iPhone 4 32GB','Apple', 50.00,1499.00,'Smartphone');
insert into PROD_TI values (6 ,'Playstation 2','Sony',100.00,399.00,'console');
insert into PROD_TI values (7 ,'Sofá Estofado','Coréia',200.00,499.00,'Sofá');
insert into PROD_TI values (8 ,'Armario','Aracajú',50.00,129.00,'Armário');
insert into PROD_TI values (9 ,'Refrigerador','CCE',200.00,1499.00,'Refrigerador');
insert into PROD_TI values (10 ,'Wii 120GB','Nitendo',250.00,999.00,'console');

SELECT * FROM PROD_TI;

-- Quantidade de produtos por tipo
SELECT SUM(QUANTIDADE) AS TOTAL, TIPO
FROM PROD_TI
GROUP BY TIPO;

-- Quantidade de produtos por fabricante
SELECT SUM(QUANTIDADE) AS TOTAL, FABRICANTE
FROM PROD_TI
GROUP BY FABRICANTE;

-- Quantidade de produtos de acordo com os tipos e fabricantes
SELECT SUM(QUANTIDADE) AS TOTAL, FABRICANTE, TIPO
FROM PROD_TI
GROUP BY FABRICANTE, TIPO;

-- Valor total dos produtos agrupados por tipo
SELECT SUM(QUANTIDADE * VLUNITARIO) AS TOTAL, TIPO
FROM PROD_TI
GROUP BY TIPO;

-- HAVING 
-- só pode ser usado com group by, sua declaração é feita depois dele
SELECT TIPO, SUM(QUANTIDADE)
FROM PROD_TI
GROUP BY TIPO
HAVING SUM(QUANTIDADE) > 200;

SELECT TIPO, FABRICANTE, SUM(QUANTIDADE)
FROM PROD_TI
GROUP BY TIPO, FABRICANTE
HAVING SUM(QUANTIDADE) > 200;

SELECT NOME, SUM(QUANTIDADE * VLUNITARIO) AS TOTAL, SUM(QUANTIDADE) AS QUANTIDADE
FROM PROD_TI
GROUP BY NOME
HAVING SUM(QUANTIDADE) > 200 AND SUM(QUANTIDADE * VLUNITARIO) > 100000;


--- ### BASE CONSULTORIO ###

-- ESTRUTURAS DAS TABELAS

CREATE TABLE MEDICOS
(
CODM VARCHAR(7) NOT NULL,
NOMEM VARCHAR(30) NOT NULL,
IDADE INTEGER NOT NULL,
ESPECIALIDADE VARCHAR(30)NOT NULL,
PRIMARY KEY (CODM)
);

CREATE TABLE PACIENTES
(
CODP VARCHAR(7) NOT NULL,
NOMEP VARCHAR(30) NOT NULL,
PRIMARY KEY (CODP)
);

CREATE TABLE CONSULTAS
(
CODM VARCHAR(7) NOT NULL,
CODP VARCHAR(7) NOT NULL,
DATA DATE NOT NULL,
HORA INTEGER NOT NULL,
);

-- INSERIR MEDICOS

INSERT INTO MEDICOS (CODM, NOMEM, IDADE, ESPECIALIDADE)
VALUES('M1','João',33,'Traumatlogia');

INSERT INTO MEDICOS (CODM, NOMEM, IDADE, ESPECIALIDADE)
VALUES('M2','Paolo',28,'Clínica Geral');

INSERT INTO MEDICOS (CODM, NOMEM, IDADE, ESPECIALIDADE)
VALUES('M3','Marta',30,'Obstetrícia');

INSERT INTO MEDICOS (CODM, NOMEM, IDADE, ESPECIALIDADE)
VALUES('M4','Carlos',33,'Nefrologista');

INSERT INTO MEDICOS (CODM, NOMEM, IDADE, ESPECIALIDADE)
VALUES('M5','Lucas',28,'Psiquiatra');

INSERT INTO MEDICOS (CODM, NOMEM, IDADE, ESPECIALIDADE)
VALUES('M6','Erickson',30,'Reumatologista');

--INSERIR PACIENTE

INSERT INTO PACIENTES (CODP, NOMEP)
VALUES('P1','Charles');

INSERT INTO PACIENTES (CODP, NOMEP)
VALUES('P2','Raimunda');

INSERT INTO PACIENTES (CODP, NOMEP)
VALUES('P3','Simone');

INSERT INTO PACIENTES (CODP, NOMEP)
VALUES('P4','Gutierrez');

INSERT INTO PACIENTES (CODP, NOMEP)
VALUES('P5','Rosana');

INSERT INTO PACIENTES (CODP, NOMEP)
VALUES('P6','Marta');

INSERT INTO PACIENTES (CODP, NOMEP)
VALUES('P7','Marcos');

INSERT INTO PACIENTES (CODP, NOMEP)
VALUES('P8','Rodrigo');

INSERT INTO PACIENTES (CODP, NOMEP)
VALUES('P9','Michele');

INSERT INTO PACIENTES (CODP, NOMEP)
VALUES('P10','Sônia');

-- INSERIR CONSULTAS

INSERT INTO CONSULTAS (CODM, CODP, DATA, HORA)
VALUES('M1','P1','15/03/2023','14');

INSERT INTO CONSULTAS (CODM, CODP, DATA, HORA)
VALUES('M1','P3','20/03/2023','15');

INSERT INTO CONSULTAS (CODM, CODP, DATA, HORA)
VALUES('M2','P2','26/03/2023','17');

INSERT INTO CONSULTAS (CODM, CODP, DATA, HORA)
VALUES('M3','P3','27/03/2023','16');

INSERT INTO CONSULTAS (CODM, CODP, DATA, HORA)
VALUES('M4','P1','10/05/2023','14');

INSERT INTO CONSULTAS (CODM, CODP, DATA, HORA)
VALUES('M5','P3','20/05/2023','15');

INSERT INTO CONSULTAS (CODM, CODP, DATA, HORA)
VALUES('M4','P2','26/05/2023','17');

INSERT INTO CONSULTAS (CODM, CODP, DATA, HORA)
VALUES('M5','P3','27/05/2023','16');

INSERT INTO CONSULTAS (CODM, CODP, DATA, HORA)
VALUES('M6','P1','12/05/2023','14');

INSERT INTO CONSULTAS (CODM, CODP, DATA, HORA)
VALUES('M5','P3','25/05/2023','15');

INSERT INTO CONSULTAS (CODM, CODP, DATA, HORA)
VALUES('M3','P2','14/05/2023','17');

INSERT INTO CONSULTAS (CODM, CODP, DATA, HORA)
VALUES('M4','P3','25/05/2023','16');

INSERT INTO CONSULTAS (CODM, CODP, DATA, HORA)
VALUES('M1','P4','12/05/2023','14');

INSERT INTO CONSULTAS (CODM, CODP, DATA, HORA)
VALUES('M2','P5','25/05/2023','15');

INSERT INTO CONSULTAS (CODM, CODP, DATA, HORA)
VALUES('M5','P3','14/05/2023','17');

INSERT INTO CONSULTAS (CODM, CODP, DATA, HORA)
VALUES('M6','P1','25/05/2023','16');

SELECT COUNT(*) FROM CONSULTAS;
SELECT COUNT(*) FROM MEDICOS;
SELECT COUNT(*) FROM PACIENTES;

-- LISTAR NOME DO MEDICO, NOME PACIENTE, DATA E HORA DAS CONSULTAS
SELECT M.NOMEM, P.NOMEP, C.DATA, C.HORA
FROM MEDICOS M, PACIENTES P, CONSULTAS C
WHERE P.CODP = C.CODP AND M.CODM = C.CODM;

SELECT M.NOMEM, P.NOMEP, CONVERT(CHAR(10), C.DATA, 103) AS DATA, C.HORA
FROM MEDICOS M, PACIENTES P, CONSULTAS C
WHERE P.CODP = C.CODP AND M.CODM = C.CODM; 

-- CRIA VIEW
CREATE VIEW DADOSPAC AS SELECT CODP, NOMEP FROM PACIENTES;

SELECT * FROM DADOSPAC
ORDER BY 2;

-- CRIAR VIEW LISTAR NOME DO MEDICO, DATA E HORA DAS CONSULTAS
CREATE VIEW MEDCONS AS SELECT NOMEM, DATA, HORA FROM MEDICOS, CONSULTAS WHERE MEDICOS.CODM = CONSULTAS.CODM;

SELECT * FROM MEDCONS;

-- BUSCAR NOME DE TODOS OS PACIENTES QUE COMEÇAM COM R
SELECT NOMEP
FROM DADOSPAC
WHERE NOMEP LIKE 'R%';

-- BUSCAR NOME MEDICOS COM CONSULTA PARA HORARIO APOS AS 16H NO MES DE MARÇO
SELECT NOMEM, HORA, DATA
FROM MEDCONS
WHERE HORA >= 16 AND DATA >= '2023-03-01' AND DATA <= '2023-03-31';

SELECT NOMEM, HORA, DATA
FROM MEDCONS
WHERE HORA >= 16 AND MONTH(DATA) = 3;